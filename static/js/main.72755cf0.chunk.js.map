{"version":3,"sources":["components/Form.js","components/ToDo.js","components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","inputText","toDos","setToDos","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","ToDo","toDo","map","el","filter","ToDoList","filteredToDos","App","useState","status","setFilteredToDos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72755cf0.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = ({ setInputText, inputText, toDos, setToDos, setStatus }) => {\n    const inputTextHandler = (e) => {\n        setInputText(e.target.value);\n    }\n    const submitToDoHandler = (e) => {\n        e.preventDefault();\n        setToDos([\n            ...toDos, \n            {text: inputText, completed: false, id: Math.random() * 1000}\n        ]);\n        setInputText(\"\");\n    }\n    const statusHandler = (e) => {\n       setStatus(e.target.value)\n    }\n    return (\n        <div>\n            <form>\n                <input \n                    value={inputText} \n                    onChange={inputTextHandler} \n                    type=\"text\" \n                    className=\"todo-input\" \n                />\n                <button onClick={submitToDoHandler} className=\"todo-button\" type=\"submit\">\n                    <i className=\"fas fa-plus-square\"></i>\n                </button>\n                <div className=\"select\">\n                    <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n                        <option value=\"all\">All</option>\n                        <option value=\"completed\">Completed</option>\n                        <option value=\"uncompleted\">Uncompleted</option>\n                    </select>\n                </div>\n            </form>\n        </div>\n    )\n};\n\nexport default Form;\n","//import React, { useState } from 'react'\n\nconst ToDo = ({ text, setToDos, toDos, toDo }) => {\n    const deleteHandler = () => {\n        setToDos(toDos.filter((el) => el.id !== toDo.id))       \n    }\n    const completeHandler = () => {\n        setToDos(toDos.map(el => {\n            if(el.id === toDo.id){\n                return {\n                    ...el, completed: !el.completed\n                }  \n            }\n            return el;\n        }))\n    }\n    return (\n        <div className=\"todo\">\n           <li className={`todo-item ${toDo.completed ? \"completed\" : \"\"} `}>{text}</li>\n           <button onClick={completeHandler} className=\"complete-btn\">\n               <i className=\"fas fa-check\"></i>\n            </button> \n           <button onClick={deleteHandler} className=\"trash-btn\">\n               <i className=\"fas fa-trash\"></i>\n            </button>\n        </div>\n    )\n}\n\nexport default ToDo\n","import React from 'react';\nimport ToDo from './ToDo';\n\nconst ToDoList = ({ toDos, setToDos, filteredToDos }) => {\n    return (\n        <div className=\"todo-container\">\n            <ul className=\"todo-list\">\n                {filteredToDos.map(toDo => (\n                    <ToDo \n                        setToDos={setToDos} \n                        toDos={toDos}\n                        toDo={toDo} \n                        key={toDos.id} \n                        text={toDo.text} \n                    />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default ToDoList;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport ToDoList from './components/ToDoList';\n\nfunction App() {\n  //States\n  const [inputText, setInputText] = useState(\"\");\n  const [toDos, setToDos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredToDos, setFilteredToDos] = useState([]);\n   //Effect\n \n   \n   useEffect(() => {\n      filterHandler();\n  }, [toDos, status])\n  //Functions\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredToDos(toDos.filter(toDo => toDo.completed === true))\n        break;\n      case 'uncompleted':\n        setFilteredToDos(toDos.filter(toDo => toDo.completed === false))\n        break;\n      default:\n        setFilteredToDos(toDos);\n    }\n  }\n \n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Nico's to do List</h1>\n      </header>\n      <Form \n        toDos={toDos} \n        inputText={inputText} \n        setToDos={setToDos} \n        setInputText={setInputText} \n        setStatus={setStatus}\n      />\n      <ToDoList \n        setToDos={setToDos} \n        toDos={toDos} \n        filteredToDos={filteredToDos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}